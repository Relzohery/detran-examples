from detran import *

def get_rod_in() :
  mat = KineticsMaterial.Create(3, 2, 8, "RODIN")
  # material 0 --- water
  mat.set_sigma_t(0, 0,     0.22222)
  mat.set_sigma_t(0, 1,     0.66667)
  mat.set_sigma_s(0, 0, 0,  0.19000)
  mat.set_sigma_s(0, 1, 0,  0.03200)
  mat.set_sigma_s(0, 1, 1,  0.65667)
  # material 1 --- 3 w/o fuel
  mat.set_sigma_t(1, 0,     0.25641) 
  mat.set_sigma_t(1, 1,     0.66667)
  mat.set_sigma_s(1, 0, 0,  0.22221)
  mat.set_sigma_s(1, 1, 0,  0.02200)
  mat.set_sigma_s(1, 1, 1,  0.57887)
  mat.set_sigma_f(1, 0,     0.00600)
  mat.set_sigma_f(1, 1,     0.19500)
  mat.set_chi(1, 0,         1.00000)
  # material 2 --- 3 w/o + rod
  mat.set_diff_coef(2, 0,   1.300)
  mat.set_diff_coef(2, 1,   0.500)
  mat.set_sigma_t(2, 0,     0.0098 + 0.022)
  mat.set_sigma_t(2, 1,     0.118)
  mat.set_sigma_s(2, 0, 0,  0.022)
  mat.set_sigma_s(2, 1, 0,  0.022)
  mat.set_sigma_s(2, 1, 1,  0.022)
  mat.set_sigma_f(2, 0,     0.006)
  mat.set_sigma_f(2, 1,     0.1950)
  mat.set_chi(2, 0,         1.0)
  # beta (set for all materials)
  mat.set_beta(0, 0.000218)
  mat.set_beta(1, 0.001023)
  mat.set_beta(2, 0.000605)
  mat.set_beta(3, 0.001310)
  mat.set_beta(4, 0.002200)
  mat.set_beta(5, 0.000600)
  mat.set_beta(6, 0.000540)
  mat.set_beta(7, 0.000152)
  # decay constants
  mat.set_lambda(0, 0.012467)
  mat.set_lambda(1, 0.028292)
  mat.set_lambda(2, 0.042524)
  mat.set_lambda(3, 0.133042)
  mat.set_lambda(4, 0.292467)
  mat.set_lambda(5, 0.666488)
  mat.set_lambda(6, 1.634781)
  mat.set_lambda(7, 3.554601)
  # velocities
  mat.set_velocity(0, 2200 * 100 * np.sqrt(0.1e4 / 0.0253))
  mat.set_velocity(1, 2200 * 100 * np.sqrt(0.1e0 / 0.0253))
  # finalize and return
  mat.finalize()
  return mat

def get_rod_out() :
  mat = KineticsMaterial.Create(6, 2, 8, "RODOUT")
  # material 0 --- 3 w/o fuel
  mat.set_diff_coef(0, 0,   1.300)
  mat.set_diff_coef(0, 1,   0.500)
  mat.set_sigma_t(0, 0,     0.0098 + 0.022)
  mat.set_sigma_t(0, 1,     0.114)
  mat.set_sigma_s(0, 1, 0,  0.022)
  mat.set_sigma_f(0, 0,     0.006)
  mat.set_sigma_f(0, 1,     0.1950)
  mat.set_chi(0, 0,         1.0)
  # material 1 --- 3 w/o fuel
  mat.set_diff_coef(1, 0,   1.300)
  mat.set_diff_coef(1, 1,   0.500)
  mat.set_sigma_t(1, 0,     0.0105 + 0.022)
  mat.set_sigma_t(1, 1,     0.134)
  mat.set_sigma_s(1, 1, 0,  0.022)
  mat.set_sigma_f(1, 0,     0.008)
  mat.set_sigma_f(1, 1,     0.2380)
  mat.set_chi(1, 0,         1.0)
  # material 2 --- water
  mat.set_diff_coef(2, 0,   1.500)
  mat.set_diff_coef(2, 1,   0.500)
  mat.set_sigma_t(2, 0,     0.0002 + 0.032)
  mat.set_sigma_t(2, 1,     0.010)
  mat.set_sigma_s(2, 1, 0,  0.032)
  mat.set_sigma_f(2, 0,     0.000)
  mat.set_sigma_f(2, 1,     0.0000)
  # material 3 --- black absorber
  mat.set_diff_coef(3, 0,   1.300)
  mat.set_diff_coef(3, 1,   0.500)
  mat.set_sigma_t(3, 0,     999.9 + 0.020)
  mat.set_sigma_t(3, 1,     999.9)
  mat.set_sigma_s(3, 1, 0,  0.020)
  mat.set_sigma_f(3, 0,     0.000)
  mat.set_sigma_f(3, 1,     0.0000)
  # material 4 --- 3 w/o + rod
  mat.set_diff_coef(4, 0,   1.300)
  mat.set_diff_coef(4, 1,   0.500)
  mat.set_sigma_t(4, 0,     0.0098 + 0.022)
  mat.set_sigma_t(4, 1,     0.114)
  mat.set_sigma_s(4, 1, 0,  0.022)
  mat.set_sigma_f(4, 0,     0.006)
  mat.set_sigma_f(4, 1,     0.1950)
  mat.set_chi(4, 0,         1.0)
  # material 5 --- 3 w/o + rod
  mat.set_diff_coef(5, 0,   1.300)
  mat.set_diff_coef(5, 1,   0.500)
  mat.set_sigma_t(5, 0,     0.0098 + 0.022)
  mat.set_sigma_t(5, 1,     0.114)
  mat.set_sigma_s(5, 1, 0,  0.022)
  mat.set_sigma_f(5, 0,     0.006)
  mat.set_sigma_f(5, 1,     0.1950)
  mat.set_chi(5, 0,         1.0)
  # beta (set for all materials)
  mat.set_beta(0, 0.000218)
  mat.set_beta(1, 0.001023)
  mat.set_beta(2, 0.000605)
  mat.set_beta(3, 0.001310)
  mat.set_beta(4, 0.002200)
  mat.set_beta(5, 0.000600)
  mat.set_beta(6, 0.000540)
  mat.set_beta(7, 0.000152)
  # decay constants
  mat.set_lambda(0, 0.012467)
  mat.set_lambda(1, 0.028292)
  mat.set_lambda(2, 0.042524)
  mat.set_lambda(3, 0.133042)
  mat.set_lambda(4, 0.292467)
  mat.set_lambda(5, 0.666488)
  mat.set_lambda(6, 1.634781)
  mat.set_lambda(7, 3.554601)
  # velocities
  mat.set_velocity(0, 2200 * 100 * np.sqrt(0.1e4 / 0.0253))
  mat.set_velocity(1, 2200 * 100 * np.sqrt(0.1e0 / 0.0253))
  # finalize and return
  mat.finalize()
  return mat
